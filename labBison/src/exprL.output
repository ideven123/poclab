语法

    0 $accept: input $end

    1 input: %empty

    2 $@1: %empty

    3 input: input $@1 line

    4 line: EOL
    5     | exp EOL

    6 exp: NUMBER
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp MULT exp
   10    | exp DIV exp
   11    | MINUS exp
   12    | exp EXPON exp
   13    | LB exp RB


终结语词，附有它们出现处的规则

$end (0) 0
error (256)
NUMBER <Un> (258) 6
PLUS <op> (259) 7
MINUS <op> (260) 8 11
MULT <op> (261) 9
DIV <op> (262) 10
EXPON <op> (263) 12
EOL (264) 4 5
LB (265) 13
RB (266) 13


非终结语词，附有它们出现处的规则

$accept (12)
    于左侧： 0
input (13)
    于左侧： 1 3, 于右侧： 0 3
$@1 (14)
    于左侧： 2, 于右侧： 3
line (15)
    于左侧： 4 5, 于右侧： 3
exp <Un> (16)
    于左侧： 6 7 8 9 10 11 12 13, 于右侧： 5 7 8 9 10 11 12
    13


状态 0

    0 $accept: . input $end

    $default  使用规则 1 以归约 (input)

    input  转到状态 1


状态 1

    0 $accept: input . $end
    3 input: input . $@1 line

    $end  偏移，并进入状态 2

    $default  使用规则 2 以归约 ($@1)

    $@1  转到状态 3


状态 2

    0 $accept: input $end .

    $default  接受


状态 3

    3 input: input $@1 . line

    NUMBER  偏移，并进入状态 4
    MINUS   偏移，并进入状态 5
    EOL     偏移，并进入状态 6
    LB      偏移，并进入状态 7

    line  转到状态 8
    exp   转到状态 9


状态 4

    6 exp: NUMBER .

    $default  使用规则 6 以归约 (exp)


状态 5

   11 exp: MINUS . exp

    NUMBER  偏移，并进入状态 4
    MINUS   偏移，并进入状态 5
    LB      偏移，并进入状态 7

    exp  转到状态 10


状态 6

    4 line: EOL .

    $default  使用规则 4 以归约 (line)


状态 7

   13 exp: LB . exp RB

    NUMBER  偏移，并进入状态 4
    MINUS   偏移，并进入状态 5
    LB      偏移，并进入状态 7

    exp  转到状态 11


状态 8

    3 input: input $@1 line .

    $default  使用规则 3 以归约 (input)


状态 9

    5 line: exp . EOL
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   12    | exp . EXPON exp

    PLUS   偏移，并进入状态 12
    MINUS  偏移，并进入状态 13
    MULT   偏移，并进入状态 14
    DIV    偏移，并进入状态 15
    EXPON  偏移，并进入状态 16
    EOL    偏移，并进入状态 17


状态 10

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   11    | MINUS exp .
   12    | exp . EXPON exp

    MULT   偏移，并进入状态 14
    DIV    偏移，并进入状态 15
    EXPON  偏移，并进入状态 16

    $default  使用规则 11 以归约 (exp)

    在规则 11 与字组 PLUS 之间的冲突以归约来解决 (%left PLUS).
    在规则 11 与字组 MINUS 之间的冲突以归约来解决 (%left MINUS).
    在规则 11 与字组 MULT 之间的冲突以偏移来解决 (MINUS < MULT).
    在规则 11 与字组 DIV 之间的冲突以偏移来解决 (MINUS < DIV).
    在规则 11 与字组 EXPON 之间的冲突以偏移来解决 (MINUS < EXPON).


状态 11

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   12    | exp . EXPON exp
   13    | LB exp . RB

    PLUS   偏移，并进入状态 12
    MINUS  偏移，并进入状态 13
    MULT   偏移，并进入状态 14
    DIV    偏移，并进入状态 15
    EXPON  偏移，并进入状态 16
    RB     偏移，并进入状态 18


状态 12

    7 exp: exp PLUS . exp

    NUMBER  偏移，并进入状态 4
    MINUS   偏移，并进入状态 5
    LB      偏移，并进入状态 7

    exp  转到状态 19


状态 13

    8 exp: exp MINUS . exp

    NUMBER  偏移，并进入状态 4
    MINUS   偏移，并进入状态 5
    LB      偏移，并进入状态 7

    exp  转到状态 20


状态 14

    9 exp: exp MULT . exp

    NUMBER  偏移，并进入状态 4
    MINUS   偏移，并进入状态 5
    LB      偏移，并进入状态 7

    exp  转到状态 21


状态 15

   10 exp: exp DIV . exp

    NUMBER  偏移，并进入状态 4
    MINUS   偏移，并进入状态 5
    LB      偏移，并进入状态 7

    exp  转到状态 22


状态 16

   12 exp: exp EXPON . exp

    NUMBER  偏移，并进入状态 4
    MINUS   偏移，并进入状态 5
    LB      偏移，并进入状态 7

    exp  转到状态 23


状态 17

    5 line: exp EOL .

    $default  使用规则 5 以归约 (line)


状态 18

   13 exp: LB exp RB .

    $default  使用规则 13 以归约 (exp)


状态 19

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   12    | exp . EXPON exp

    MULT   偏移，并进入状态 14
    DIV    偏移，并进入状态 15
    EXPON  偏移，并进入状态 16

    $default  使用规则 7 以归约 (exp)

    在规则 7 与字组 PLUS 之间的冲突以归约来解决 (%left PLUS).
    在规则 7 与字组 MINUS 之间的冲突以归约来解决 (%left MINUS).
    在规则 7 与字组 MULT 之间的冲突以偏移来解决 (PLUS < MULT).
    在规则 7 与字组 DIV 之间的冲突以偏移来解决 (PLUS < DIV).
    在规则 7 与字组 EXPON 之间的冲突以偏移来解决 (PLUS < EXPON).


状态 20

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . MULT exp
   10    | exp . DIV exp
   12    | exp . EXPON exp

    MULT   偏移，并进入状态 14
    DIV    偏移，并进入状态 15
    EXPON  偏移，并进入状态 16

    $default  使用规则 8 以归约 (exp)

    在规则 8 与字组 PLUS 之间的冲突以归约来解决 (%left PLUS).
    在规则 8 与字组 MINUS 之间的冲突以归约来解决 (%left MINUS).
    在规则 8 与字组 MULT 之间的冲突以偏移来解决 (MINUS < MULT).
    在规则 8 与字组 DIV 之间的冲突以偏移来解决 (MINUS < DIV).
    在规则 8 与字组 EXPON 之间的冲突以偏移来解决 (MINUS < EXPON).


状态 21

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
    9    | exp MULT exp .
   10    | exp . DIV exp
   12    | exp . EXPON exp

    EXPON  偏移，并进入状态 16

    $default  使用规则 9 以归约 (exp)

    在规则 9 与字组 PLUS 之间的冲突以归约来解决 (PLUS < MULT).
    在规则 9 与字组 MINUS 之间的冲突以归约来解决 (MINUS < MULT).
    在规则 9 与字组 MULT 之间的冲突以归约来解决 (%left MULT).
    在规则 9 与字组 DIV 之间的冲突以归约来解决 (%left DIV).
    在规则 9 与字组 EXPON 之间的冲突以偏移来解决 (MULT < EXPON).


状态 22

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   10    | exp DIV exp .
   12    | exp . EXPON exp

    EXPON  偏移，并进入状态 16

    $default  使用规则 10 以归约 (exp)

    在规则 10 与字组 PLUS 之间的冲突以归约来解决 (PLUS < DIV).
    在规则 10 与字组 MINUS 之间的冲突以归约来解决 (MINUS < DIV).
    在规则 10 与字组 MULT 之间的冲突以归约来解决 (%left MULT).
    在规则 10 与字组 DIV 之间的冲突以归约来解决 (%left DIV).
    在规则 10 与字组 EXPON 之间的冲突以偏移来解决 (DIV < EXPON).


状态 23

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . MULT exp
   10    | exp . DIV exp
   12    | exp . EXPON exp
   12    | exp EXPON exp .

    EXPON  偏移，并进入状态 16

    $default  使用规则 12 以归约 (exp)

    在规则 12 与字组 PLUS 之间的冲突以归约来解决 (PLUS < EXPON).
    在规则 12 与字组 MINUS 之间的冲突以归约来解决 (MINUS < EXPON).
    在规则 12 与字组 MULT 之间的冲突以归约来解决 (MULT < EXPON).
    在规则 12 与字组 DIV 之间的冲突以归约来解决 (DIV < EXPON).
    在规则 12 与字组 EXPON 之间的冲突以偏移来解决 (%right EXPON).
